############
# REQUIRED #
############
SEQREPO_DATAPROXY_URI=seqrepo+file:///usr/local/share/seqrepo/2024-12-20	# URI for SeqRepo DataProxy interface. See `docs/seqrepo` for more info
ANYVAR_STORAGE_URI=postgresql://anyvar:anyvar-pw@localhost:5432/anyvar		# Set to `null` if running AnyVar without storage
UTA_DB_URL=postgresql://anonymous@localhost:5432/uta/uta_20241220			# See `docs/uta.md` for more info


############
# OPTIONAL #
############

## TESTING - see `README.md`
ANYVAR_TEST_STORAGE_URI=postgresql://postgres:postgres@localhost/anyvar_test	# Database to use for tests

## LOGGING - see `README.md`
ANYVAR_LOGGING_CONFIG=path/to/logging/config/file.yaml	# The relative or absolute path of a YAML file containing a valid logging configuration

## SQL STORAGE CONFIG - see `docs/sql_storage.md`
ANYVAR_SQL_STORE_BATCH_LIMIT=10000				# In batch mode, limit VRS object upsert batches to this number; defaults to 100,000
ANYVAR_SQL_STORE_TABLE_NAME=vrs_objects			# The name of the table that stores VRS objects; defaults to vrs_objects
ANYVAR_SQL_STORE_MAX_PENDING_BATCHES=50			# The maximum number of pending batches to allow before blocking; defaults to 50
ANYVAR_SQL_STORE_FLUSH_ON_BATCHCTX_EXIT=True	# Whether or not flush all pending database writes when the batch manager exists; defaults to True

## SNOWFLAKE STORAGE CONFIG - See `docs/snowflake.md`
ANYVAR_SNOWFLAKE_STORE_PRIVATE_KEY_PASSPHRASE="your-passphrase-here"	# The passphrase for an encrypted private key
ANYVAR_SNOWFLAKE_BATCH_ADD_MODE="merge"									# The SQL statement type to use when adding new VRS objects. See `docs/snowflake.md` for a list of possible options.

## CELERY CONFIG - See `docs/asyc.md`
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_BACKEND_URL=redis://localhost:6379/0
ANYVAR_VCF_ASYNC_WORK_DIR=/path/to/shared/file/system
ANYVAR_VCF_ASYNC_FAILURE_STATUS_CODE=500	# What HTTP status code to return for failed asynchronous tasks
CELERY_TASK_DEFAULT_QUEUE=anyvar_q			# The name of the queue for tasks
CELERY_EVENT_QUEUE_PREFIX=anyvar_ev			# The prefix for event receiver queue names
CELERY_TIMEZONE=UTC							# The timezone that Celery operates in
CELERY_RESULT_EXPIRES=7200					# Number of seconds after submission before a result expires from the backend
CELERY_TASK_ACKS_LATE=true					# Whether workers acknowledge tasks before (`false`) or after (`true`) they are run
CELERY_TASK_REJECT_ON_WORKER_LOST=false		# Whether to reject (`true`) or fail (`false`) a task when a worker dies mid-task
CELERY_WORKER_PREFETCH_MULTIPLIER=1			# How many tasks a worker should fetch from the queue at a time
CELERY_TASK_TIME_LIMIT=3900					# Maximum time a task may run before it is terminated
CELERY_SOFT_TIME_LIMIT=3600					# Amount of time a task can run before an exception is triggered, allowing for cleanup
CELERY_WORKER_SEND_TASK_EVENTS=false		# Change to `true` to cause Celery workers to emit task events for monitoring purposes
