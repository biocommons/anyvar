openapi: 3.0.0

info:
  title: AnyVar
  description: >-
    AnyVar aspires to provide REST-based validation, normalization,
    identification, and registration of any biological variation.

  contact:
    name: Reece Hart
    email: reecehart@gmail.com
  version: 0.0.0

tags:
  - name: General
  - name: Sequences
    description: >-
      Sequence and sequence metadata
  - name: Locations
    description: >-
      Where Variation occurs
  - name: Variation
    description: All classes of primitive Variation
  #- name: Variation Subtypes
  #  description: Specific subtypes of variation
  #- name: Variation Set
  #  description: Sets of Variation


paths:
  ###########################################################################
  # Info

  /info:
    get:
      tags: ["General"]
      summary: Check system status and versions
      description: >-
        System status check and configuration
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Info"


  ###########################################################################
  # Sequences

  /sequence/{alias}:
    get:
      summary: Retrieve a sequence by any alias
      description: >-
        Retrieve a reference sequence using a hash function
      tags:
        - Sequences
      parameters:
        - in: path
          name: alias
          description: Any sequence alias or hash
          required: true
          schema:
            type: string
          example: refseq:NM_000551.3
        - in: query
          name: start
          description: >-
            Optional; specifies start of requested sequence
            using interbase coordinates (numerically equivalent to
            0-based, right-open).
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: end
          description: >-
            Optional; specifies end of requested sequence
            using interbase coordinates (numerically equivalent to
            0-based, right-open).
          schema:
            type: integer
            format: int32
            minimum: 0
      responses:
        200:
          description: >-
            Successful retrieval of sequence. Returned as a single string with
            no line breaks
          content:
            text/plain:
              schema:
                type: string
                example: >-
                  MSSPTPPGGQRTLQKRKQGSSQKVAASAPKKNTNSNNSILKIYSDEATGLRVDPLVVLFLAVGFIFSVVALHVISKVAGKLF
        404:
          description: NOT FOUND; sequence does not exist
        422:
          description: UNPROCESSABLE ENTITY; request was understood, but is invalid

  /sequence-metadata/{alias}:
    get:
      summary: Get reference metadata from a hash
      description: Retrieve a metadata about a reference sequence using a hash identifier
      tags:
        - Sequences
      parameters:
        - in: path
          name: alias
          required: true
          description: The identifier to use. Should be a checksum hash
          schema:
            type: string
          example: GRCh38:1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
        404:
          description: NOT FOUND; sequence does not exist
        422:
          description: UNPROCESSABLE ENTITY; request was understood, but is invalid


  ###########################################################################
  # Variation
  
  # /variation:
  #   put:
  #     tags: ["Variation"]
  #     summary: Create an instance of sequence variation.
  #     description: >-
  #       Creates an instance of sequence variation and returns a
  #       deterministically computed identifier.
  #       
  #       Requests with variant definitions that normalize to the same
  #       interal variant result in only one record and the same
  #       computed id is always returned.  That is, this endpoint is
  #       idempotent, irrespective of the input definition format.
  # 
  #       Alleles within haplotypes, and haplotypes withing genotypes,
  #       are subjected to canonical ordering rules. Therefore, the
  #       computed id of an haplotype in invariant with respect to the
  #       order of the defined alleles. The same invariance holds for
  #       genotypes and their component haplotypes.
  # 
  #       The following input formats are permitted:
  # 
  #         * Text (any descriptive text that purports to represent variation)
  #         * ISCN
  # 
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             properties:
  #               definition:
  #                 description: >-
  #                   Creates a variation instance from the provided
  #                   `definition` parameter, which is interpreted
  #                   according to `format` parameter.
  # 
  #                   By default, the format is inferred from structure.
  #                   When inferred, the variation will be created as a
  #                   text record if other methods fail.  If format is
  #                   not auto and the variant cannot be parsed
  #                   appropriately, an error is returned.
  #                 type: string
  #                 example: "NC_000010.11:g.87894077C>T"
  #     responses:
  #       200:
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #                 
  #       400:
  #         description: The variation could not be parsed or is otherwise invalid.
  #       501:
  #         description: >-
  #           The requested resource or operation is not currently
  #           supported. It may be supported in the future.

  /variation/{id}:
    get:
      tags: ["Variation"]
      summary: Retrieve any VRS object using a VRS identifier
      description: >-
        Gets a variation instance by id, may return any supported type
        of variation
      parameters:
        - name: id
          in: path
          description: variation id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK


  ###########################################################################
  # Text
  
  /text:
    put:
      tags: ["Variation"]
      summary: Create a new Text allele and identifier
      description: >-
        Create an instance of unparsed text variation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                definition:
                  description: >-
                    Allele definition, interpreted according to format
                  type: string
                  example: NC_000010.11:g.87894077C>T
              required:
                - definition
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                # $ref: "http://localhost:5000/vr.json#/definitions/Text"
                
  /text/{id}:
    get:
      tags: ["Variation"]
      summary: Retrieve Text variation by VRS identifier
      description: >-
        Return text variation
      parameters:
        - name: id
          in: path
          description: Text variation id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                # $ref: "http://localhost:5000/vr.json#/definitions/Text"
    
  ###########################################################################
  # Allele

  /allele:
    put:
      tags: ["Variation"]
      summary: Create a new allele from VRS, HGVS, SPDI, or gnomAD formats
      description: >-
        An Allele is a specific, single, and contiguous Sequence at a
        Location. Each alternative Sequence may be empty, shorter,
        longer, or the same length as the interval (e.g., due to one or
        more indels).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                definition:
                  description: >-
                    Allele definition, interpreted according to format
                  type: string
                  example: NC_000010.11:g.87894077C>T
                format:
                  description: format of definition
                  type: string
                  enum:
                    - ga4gh
                    - beacon
                    - gnomad
                    - hgvs
                    - spdi
                  default: hgvs
                  example: hgvs
                normalize:
                  description: Normalize the allele in the specified direction.
                  type: string
                  enum:
                    - voca
                    - right
                    - left
                    - none
                  default: right
                  example: right
              required:
                - definition
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                # $ref: "http://localhost:5000/vr.json#/definitions/Allele"
                
  /allele/{id}:
    get:
      tags: ["Variation"]
      summary: Retrieve an allele from VRS identifier
      description: >-
        An Allele is a specific, single, and contiguous Sequence at a
        Location. Each alternative Sequence may be empty, shorter,
        longer, or the same length as the interval (e.g., due to one or
        more indels).
        
        The following formats are accepted: 

          * Beacon (`13 : 32936732 G > C`)
          * HGVS
          * SPDI
          * gnomAD (`1-55516888-G-GA`)

      parameters:
        - name: id
          in: path
          description: object id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                # $ref: "http://localhost:5000/vr.json#/definitions/Allele"


                

  ###########################################################################
  # Variation Sets
  
  # /variationset:
  #   put:
  #     tags: ["Variation"]
  #     description: >-
  #       What do *you* think a VariationSet should be?
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               definition:
  #                 description: >-
  #                   Allele definition, interpreted according to format
  #                 type: object
  #                 example:
  #                   member_ids:
  #                     - ga4gh:VA.zQuUXqiP_YpP_uODT4PcfNIYoOPdYjC-
  #                     - ga4gh:VA.jzmI29gA7-Rs7pRkeCj0mOp1Zsxan2Sc
  #                     - ga4gh:VA.3NoEdRUAnX2AMdug2XoisbEi-GR7wB1x
  #                     - ga4gh:VA.OWpaUYPJgLq8ZTPDbyCId6cgYPWjtrRK
  #                     - ga4gh:VA.ltc3Iah3Iy5X_A06NGMla76bmPGSbMj9
  #                     - ga4gh:VA.yss8NB_TDAnwyWX7ImXKTnroBYAN_d1O
  #                     - ga4gh:VA.X3t0_U_rG5EfNUEYZb3zmulRYcdZ9RD2
  #                     - ga4gh:VA.bD4JRdGKbwCOKh3ou8fPS2i9gD1Ojf7z
  #                     - ga4gh:VA.1DHFMjTlO0Ju1cg5sa8vP2o1HSPiSR7t
  #                     - ga4gh:VA.TvaAqwD_MduWohVGP4i2Tze4bieA-Kny
  #             required:
  #               - definition
  #     responses:
  #       200:
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               # $ref: "http://localhost:5000/vr.json#/definitions/Allele"
  # 
  # /variationset/{id}:
  #   get:
  #     description: gets a variation instance by id
  #     tags: ["Variation"]
  #     parameters:
  #       - name: id
  #         in: path
  #         description: canonical variationset id
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       200:
  #         description: found; variation returned


  ###########################################################################
  # Locations
  
  /locations/{id}:
    get:
      tags: ["Locations"]
      summary: Retrieve location by VRS location identfier
      description: >-
        An identifiable position or region on a Sequence, defined by
        Sequence Id and an Interval.
      parameters:
        - name: id
          in: path
          description: sequence id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                # This seems to be working: $ref: "file:vr.json#/definitions/Location"

  #######################################################################
  # Summary Statistics

  /summary_statistics/{vartype}:
    get:
      tags: ["Statistics"]
      summary: Summary Statistics for Variations in anyvar
      description: Output summary statistics
      parameters:
        - name: vartype
          in: path
          description: variation type
          required: true
          schema:
            type: string
            enum:
              - substitution
              - deletion
              - insertion
              - all
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer


# ######################################################################
# COMPONENTS

components:
  schemas:
    Info:
      type: object
      example:
        dependencies:
          anyvar:
            version: "1.2.3"
          ga4gh.vrs:
            version: "0.2.0"

    # External references -- necessary for definitions to show up in
    # generated docs
    # >>> import ga4gh.vrs
    # >>> import json
    # >>> j = json.load(open(ga4gh.vrs.schema_path))
    # >>> print("\n".join([f"{k}:\n  $ref: \"file:vr.json#/definitions/{k}\"" for k in j["definitions"].keys()]))
    
    # Allele:
    #   $ref: "file:vr.json#/definitions/Allele"
    # CURIE:
    #   $ref: "file:vr.json#/definitions/CURIE"
    # ChromosomeLocation:
    #   $ref: "file:vr.json#/definitions/ChromosomeLocation"
    # Cytoband:
    #   $ref: "file:vr.json#/definitions/Cytoband"
    # CytobandInterval:
    #   $ref: "file:vr.json#/definitions/CytobandInterval"
    # DateTime:
    #   $ref: "file:vr.json#/definitions/DateTime"
    # Haplotype:
    #   $ref: "file:vr.json#/definitions/Haplotype"
    # Location:
    #   $ref: "file:vr.json#/definitions/Location"
    # SequenceInterval:
    #   $ref: "file:vr.json#/definitions/SequenceInterval"
    # SequenceLocation:
    #   $ref: "file:vr.json#/definitions/SequenceLocation"
    # SequenceState:
    #   $ref: "file:vr.json#/definitions/SequenceState"
    # SimpleInterval:
    #   $ref: "file:vr.json#/definitions/SimpleInterval"
    # State:
    #   $ref: "file:vr.json#/definitions/State"
    # Text:
    #   $ref: "file:vr.json#/definitions/Text"
    # Variation:
    #   $ref: "file:vr.json#/definitions/Variation"
    # VariationSet:
    #   $ref: "file:vr.json#/definitions/VariationSet"


    Metadata:
      type: object
      description: Holds information about a sequence checksum
      properties:
        metadata:
          type: object
          properties:
            length:
              type: integer
              format: int64
              description: An decimal integer of the length of the reference sequence
            aliases:
              type: array
              items:
                type: string
            alphabet:
              type: string
              nullable: true
            added:
              type: string
              nullable: true
          required:
            - length
            - aliases
            - alphabet
            - added
      example:
        metadata:
          aliases:
          - GRCh38:1
          - GRCh38:chr1
          - GRCh38.p1:1
          - GRCh38.p1:chr1
          - GRCh38.p10:1
          - GRCh38.p10:chr1
          - GRCh38.p11:1
          - GRCh38.p11:chr1
          - GRCh38.p12:1
          - GRCh38.p12:chr1
          - GRCh38.p2:1
          - GRCh38.p2:chr1
          - GRCh38.p3:1
          - GRCh38.p3:chr1
          - GRCh38.p4:1
          - GRCh38.p4:chr1
          - GRCh38.p5:1
          - GRCh38.p5:chr1
          - GRCh38.p6:1
          - GRCh38.p6:chr1
          - GRCh38.p7:1
          - GRCh38.p7:chr1
          - GRCh38.p8:1
          - GRCh38.p8:chr1
          - GRCh38.p9:1
          - GRCh38.p9:chr1
          - MD5:6aef897c3d6ff0c78aff06ac189178dd
          - RefSeq:NC_000001.11
          - SEGUID:FCUd6VJ6uikS/VWLbhGdVmj2rOA
          - SHA1:14251de9527aba2912fd558b6e119d5668f6ace0
          - VMC:GS_Ya6Rs7DHhDeg7YaOSg1EoNi3U_nQ9SvO
          - genbank:CM000663.2
          length: 248956422
          alphabet: ACGMNRT
          added: 2016-08-27T21:17:00Z
    
